{"version":3,"sources":["components/assets/bte-explain.png","components/assets/bte-predict.png","components/assets/biothings-explorer-text.png","components/assets/network.png","components/HomeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/AboutComponent.js","components/AccordionComponent.js","components/StepsComponent.js","components/AutoCompleteComponent.js","components/NoInpuModalComponent.js","components/ExplainInputComponent.js","components/Viz.js","components/VizLabel.js","components/MetaPathFormComponent.js","components/TableComponent.js","components/D3GraphComponent.js","components/BTETableComponent.js","components/DimerComponent.js","components/ExplainQueryResultComponent.js","components/ExplainComponent.js","components/PredictHelpComponent.js","components/SemanticTypesAutocompleteComponent.js","components/PredictInputComponent.js","components/TreeGraphComponent.js","components/PredictQueryResultComponent.js","components/PredictComponent.js","shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/forms.js","redux/comments.js","redux/promotions.js","shared/leaders.js","redux/leaders.js","redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","Segment","Grid","columns","relaxed","Column","Card","centered","href","color","Image","src","explain","wrapped","ui","Content","textAlign","Header","Description","extra","to","Button","predict","Divider","vertical","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","onClick","bte","height","width","alt","isOpen","navbar","network","Component","Footer","About","active","title","AccordionComponent","activeIndex","handleClick","e","titleProps","index","newIndex","Icon","circular","name","Accordion","Title","List","bulleted","Item","BTESteps","steps","key","icon","step1Active","link","handleBackToStep1","completed","step1Complete","description","step2Active","handleBackToStep2","disabled","step2Complete","step3Active","handleBackToStep3","step3Complete","Step","Group","items","widths","AutoComplete","handleResultSelect","result","selected","handleselect","handleSearchChange","isLoading","fetch","then","response","ok","json","new_response","semantic_type","length","results","content","map","record","new_record","Search","category","loading","onResultSelect","onSearchChange","ModalExampleControlled","Modal","open","modalOpen","handleClose","basic","size","Actions","inverted","ExplainInput","sourceValue","sourceSelected","targetValue","targetSelected","showModal","setExample1","setExample2","shouldHide","Form","onSubmit","handleStep1Submit","Popup","header","trigger","handleInputSelect","handleOutputSelect","type","draw","svg","d3","append","attr","G","SV","CS","PF","PW","T","A","GF","P","CL","BS","D","C","CC","BP","MA","shorthand","Gene","SequenceVariant","ChemicalSubstance","PhenotypicFeature","Pathway","Transcript","AnatomicalEntity","GeneFamily","Protein","CellLine","Biosample","DiseaseOrPhenotypicFeature","Cell","CellularComponent","BiologicalProcess","MolecularActivity","dataArray","split","item","selectAll","data","enter","d","i","slice","text","Viz","useEffect","label","fullName","_","invert","Object","keys","Math","floor","MetaPathForm","selectedPath","radios","paths","path","Field","control","onChange","handleSelect","Checkbox","Table","Row","defaultChecked","singleLine","HeaderCell","Body","handleSubmit","RenderTable","D3Graph","myConfig","nodeHighlightBehavior","node","highlightStrokeColor","fontColor","highlightColor","labelProperty","fontSize","opacity","renderLabel","resultReady","id","graph","config","BTETable","column","display","direction","activePage","totalPages","handleSort","clickedColumn","reverse","sortBy","handlePaginationChange","prevProps","Array","isArray","sortable","celled","fixed","sorted","values","join","collapsing","Pagination","onPageChange","defaultActivePage","siblingRange","ReactLoader","Dimmer","Loader","ExplainQueryResult","require","Explain","selectedInput","selectedOutput","selectedPaths","Set","queryResults","selectedQueryResults","nodes","links","showInput","showMetaPath","showResult","handleStep2Submit","handleMetaPathSelect","handleQueryResultSelect","target","add","delete","recordsToGraph","isEmpty","error","Error","status","statsText","message","catch","console","log","url","URL","params","input_obj","JSON","stringify","output_obj","intermediate_nodes","search","URLSearchParams","toString","records","from","rec","push","Breadcrumb","Section","initialState","SearchSemanticTypeComponent","setTimeout","re","RegExp","escapeRegExp","filter","test","debounce","leading","PredictInput","TreeGraph","PredictQueryResult","Predict","recordsToTreeGraph","tree_dict","tree","children","prop","pathProps","baseUrl","dishesLoading","dishesFailed","errmess","payload","addDishes","dishes","commentsFailed","addComments","comments","promosLoading","promosFailed","addPromos","promos","Main","options","exact","component","withRouter","connect","leaders","promotions","dispatch","postComment","dishId","rating","author","comment","newComment","date","Date","toISOString","method","body","headers","credentials","addComment","fetchDishes","fetchComments","fetchPromos","resetFeedbackForm","actions","reset","Dishes","errMess","action","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","Comments","concat","Promotions","LEADERS","image","designation","abbr","featured","Leaders","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5004b6a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bte-explain.3398c417.png\";","module.exports = __webpack_public_path__ + \"static/media/bte-predict.16a4b950.png\";","module.exports = __webpack_public_path__ + \"static/media/biothings-explorer-text.8ec6e86e.png\";","module.exports = __webpack_public_path__ + \"static/media/network.e94e244a.png\";","import React from 'react'\nimport { Divider, Button, Card, Grid, Image, Segment } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport explain from './assets/bte-explain.png';\nimport predict from './assets/bte-predict.png';\n\nconst Home = () => (\n  <div className=\"container\">\n  <Segment>\n    <Grid columns={2} relaxed='very'>\n      <Grid.Column>\n        <Card centered href=\"/explorer/explain\" color=\"red\" className=\"homeCard\">\n          <Image src={explain} wrapped ui={false} />\n          <Card.Content textAlign=\"center\">\n            <Card.Header>EXPLAIN</Card.Header>\n            <Card.Description>\n            EXPLAIN queries are designed to identify plausible reasoning chains to explain the relationship between two entities.\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra textAlign=\"center\">\n            <Link to='/explain'><Button>Try it Out</Button></Link>\n          </Card.Content>\n        </Card>\n      </Grid.Column>\n      <Grid.Column>\n        <Card centered href=\"/explorer/predict\" color=\"green\" className=\"homeCard\">\n          <Image src={predict} wrapped ui={false} />\n          <Card.Content textAlign=\"center\">\n            <Card.Header>PREDICT</Card.Header>\n            <Card.Description>\n            PREDICT queries are designed to predict plausible relationships between one entity and an entity class, such as Gene.\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra textAlign=\"center\">\n            <Link to='/predict'><Button>Try it Out</Button></Link>\n          </Card.Content>\n        </Card>\n      </Grid.Column>\n    </Grid>\n\n    <Divider vertical>Or</Divider>\n  </Segment>\n  </div>\n)\n\nexport default Home","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron } from 'reactstrap';\nimport { NavLink, Link } from 'react-router-dom';\nimport bte from './assets/biothings-explorer-text.png';\nimport network from './assets/network.png';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        })\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        })\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \", Password: \" + this.password.value\n            + \", Remember: \" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                  <div className=\"container\">\n                    <NavbarToggler onClick={this.toggleNav} />\n                    <NavbarBrand className=\"mr-auto\" href=\"/explorer\">\n                        <img src={bte} height=\"40\" width=\"50\"\n                            alt=\"BioThings Explorer\" />\n                    </NavbarBrand>\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                            <NavLink className=\"nav-link\" to='/'>\n                                    HOME\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/explain'>\n                                    EXPLAIN\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/predict'>\n                                    PREDICT\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                  </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header justify-content-center\">\n                            <div className=\"col-6 col-sm-12 col-md-6 intro\">\n                                <h1>BioThings Explorer</h1>\n                                <br></br>\n                                <p>BioThings Explorer allows users to query a vast amount of biological and chemical databases in a central place by calling APIs which distribute these data on the fly. </p>\n                            </div>\n                            <div className=\"col-6 col-sm-12 col-md-6\">\n                                <img src={network} width=\"90%\"\n                                    alt=\"BioThings Explorer\" />\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-5\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to='/predict'>PREDICT</Link></li>\n                        <li><Link to='/explain'>EXPLAIN</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Contact Us</h5>\n                      <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:biothings@googlegroups.com\">\n                         biothings@googlegroups.com</a>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"https://twitter.com/intent/follow?original_referer=https%3A%2F%2Fbiothings.io%2F&ref_src=twsrc%5Etfw&region=follow_link&screen_name=biothingsapi&tw_p=followbutton\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:mailto:biothings@googlegroups.com\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2017-2020 The Su/Wu Lab.</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nfunction RenderLeader({leader}) {\n    return(\n        <Media>\n            <Media left href=\"#\">\n                <Media object width=\"100%\" src={leader.image} alt={leader.name} /> \n            </Media>\n            <Media body>\n                <Media heading>\n                    {leader.name}\n                </Media>\n                {leader.designation}\n                <br />\n                <br />\n                {leader.description}\n                <br />\n                <br />\n            </Media>\n        </Media>\n    )\n}\n\nfunction About(props) {\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to='/'>Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About; ","import React, { Component } from 'react'\nimport { Accordion, Icon, List } from 'semantic-ui-react'\n\nexport default class AccordionComponent extends Component {\n  state = { activeIndex: 10 }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    const { activeIndex } = this.state\n\n    return (\n      <div>\n        <br></br>\n        <Icon circular name='info' />\n        <Accordion>\n          <Accordion.Title\n            active={activeIndex === 0}\n            index={0}\n            onClick={this.handleClick}\n          >\n            <Icon name='dropdown' />\n            What can \"EXPLAIN\" queries do?\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 0}>\n            <p>\n            EXPLAIN queries are designed to identify plausible reasoning chains to explain the relationship between two entities.\n            </p>\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 1}\n            index={1}\n            onClick={this.handleClick}\n          >\n            <Icon name='dropdown' />\n            Give me some examples of EXPLAIN queries.\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 1}>\n            <List bulleted>\n              <List.Item>Why does <b>imatinib</b> have an effect on the treatment of <b>chronic myelogenous leukemia (CML)</b>?</List.Item>\n              <List.Item>Why does <b>pentoxifylline</b> have an effect on the treatment of <b>severe acute respiratory syndrome</b>?</List.Item>\n            </List>\n          </Accordion.Content>\n        </Accordion>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Step } from 'semantic-ui-react'\n\nexport default class BTESteps extends Component {\n\n    render() {\n      const steps = [\n        {\n          key: \"input\",\n          icon: 'pencil',\n          active: this.props.step1Active,\n          link: true,\n          onClick: this.props.handleBackToStep1,\n          title: 'Step 1: Input',\n          completed: this.props.step1Complete,\n          description: 'Specify your source and target node',\n        },\n        {\n          key: \"metapath\",\n          icon: 'tasks',\n          active: this.props.step2Active,\n          link: true,\n          onClick: this.props.handleBackToStep2,\n          disabled: this.props.step1Complete ? false: true,\n          title: 'Step 2: Metapath',\n          completed: this.props.step2Complete,\n          description: 'Select the metapath(s) to perform the query',\n        },\n        {\n          key: \"result\",\n          icon: 'table',\n          active: this.props.step3Active,\n          link: true,\n          onClick: this.props.handleBackToStep3,\n          disabled: this.props.step2Complete ? false: true,\n          title: 'Step 3: Result',\n          completed: this.props.step3Complete,\n          description: 'Explore the results using graph and table',\n        },\n      ]\n      return (\n        <div className=\"row steps\">\n            <div className=\"col-12\">\n              <Step.Group items={steps} widths={3}/>\n            </div>\n        </div>\n      )\n    }\n}\n","import React, { Component } from 'react';\nimport { Search } from 'semantic-ui-react'\n\nexport default class AutoComplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {isLoading: false,\n                  results: [],\n                  value: this.props.value ? this.props.value : '',\n                  selected: this.props.selected ? this.props.selected : {} }\n  }\n  //This needs to be moved to the parent class\n  handleResultSelect = (e, { result }) => {\n    this.setState({ value: result.title, selected: result });\n    this.props.handleselect(result);\n  }\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n    fetch('https://geneanalysis.ncats.io/explorer_api/v1/hint?q=' + value)\n    .then(response => {\n      if (response.ok) {\n          return response.json();\n      } else {\n        return {}\n      }})\n    .then(response => {\n      var new_response = {};\n      for (var semantic_type in response) {\n        if (response[semantic_type].length > 0) {\n          new_response[semantic_type] = {name: semantic_type, results: []};\n          var content = response[semantic_type].map(function(record) {\n            var new_record = record;\n            new_record['title'] = record['name'];\n            new_record['description'] = record['display'];\n            return new_record;\n          });\n          new_response[semantic_type]['results'] = content;\n        }\n      }\n      this.setState({\n        isLoading: false,\n        results: new_response,\n      })\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Search\n          category\n          loading={this.state.isLoading}\n          onResultSelect={this.handleResultSelect}\n          onSearchChange={this.handleSearchChange}\n          results={this.state.results}\n          value={this.state.value}\n          {...this.props}\n        />\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\n\nexport default class ModalExampleControlled extends Component {\n\n  render() {\n    return (\n      <Modal\n        open={this.props.modalOpen}\n        handleClose={this.props.handleClose}\n        basic\n        size='small'\n      >\n        <Modal.Header>User Input Error</Modal.Header>\n        <Modal.Content>\n          <h3>You haven't selected the input/output yet.</h3>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='green' onClick={this.props.handleClose} inverted>\n            <Icon name='checkmark' /> Got it\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}","import React, { Component } from 'react';\nimport AutoComplete from './AutoCompleteComponent';\nimport { Form, Button, Segment, Popup, Modal } from 'semantic-ui-react'\nimport ModalExampleControlled from './NoInpuModalComponent';\n\nexport default class ExplainInput extends Component {\n  state = {\n      sourceValue: '',\n      sourceSelected: {},\n      targetValue: '',\n      targetSelected: {},\n      showModal: false\n  }\n\n  setExample1 = () => {\n      this.setState({\n        \n      })\n    }\n\n  setExample2 = () => {\n    this.setState({\n        sourceValue: '',\n        sourceSelected: {},\n        targetValue: '',\n        targetSelected: {}\n    })\n    }\n  render() {\n    return (\n        <div className={this.props.shouldHide ? '' : 'hidden'}>\n            <ModalExampleControlled modalOpen={this.props.showModal} handleClose={this.props.handleClose}/>\n            <div className=\"row \">\n                <div className=\"col-12\">\n                    <Segment color=\"green\">\n                        <Form onSubmit={this.props.handleStep1Submit}>\n                            <Form.Group>\n                                <h2> Step 1: Specify source and target nodes.</h2>\n                                <hr />\n                            </Form.Group>\n                            <div>\n                                <Popup content=\"The ending node of the paths\" header=\"Source Node\" trigger={<h3>Source Node</h3>}/>\n                            </div>\n                            <br />\n                            <Form.Group>\n                                <AutoComplete \n                                    handleselect={this.props.handleInputSelect}\n                                />\n                            </Form.Group>\n                            <div>\n                            <Popup content=\"The ending node of the paths\" header=\"Target Node\" trigger={<h3>Target Node</h3>}/>\n                            </div>\n                            <br />\n                            <Form.Group>\n                                <AutoComplete \n                                    handleselect={this.props.handleOutputSelect}\n                                />\n                            </Form.Group>\n                            <div className=\"col text-center\">\n                                <Button type='submit' onClick={this.props.handleStep1Submit}>Continue</Button>\n                            </div>\n                        </Form>\n                    </Segment>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\n\n","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { Graph } from 'react-d3-graph';\n\nconst Viz = (props) => {\n  useEffect(() => {\n   draw(props)\n }, [2])\n  return <div className={props.className} />\n}\n\nconst draw = (props) => {\n    let svg = d3.select('.' + props.className).append('svg')\n                .attr('height', \"20px\")\n                .attr('width', \"100%\")\n                .attr('id', 'svg-viz-' + props.className)\n\n    const color = {\n        G: '#02b3e4',\n        SV: \"#e91e63\", \n        CS: '#fa750f',\n        PF: '#1b03fc',\n        PW: '#607d8b',\n        T: '#7d4d3e',\n        A: '#4caf50',\n        GF: \"#e11F63\",\n        P: \"#f21e37\",\n        CL: '#175442',\n        BS: '#815499',\n        D: '#7761f2',\n        C: '#d8e339',\n        CC: '#3107d9',\n        BP: '#236b44',\n        MA: '#0366fc',\n    }\n\n    const shorthand = {\n        Gene: \"G\",\n        SequenceVariant: \"SV\",\n        ChemicalSubstance: \"CS\",\n        PhenotypicFeature: \"PF\",\n        Pathway: \"PW\",\n        Transcript: \"T\",\n        AnatomicalEntity: \"A\",\n        GeneFamily: \"GF\",\n        Protein: \"P\",\n        CellLine: \"CL\",\n        Biosample: \"BS\",\n        DiseaseOrPhenotypicFeature: \"D\",\n        Cell: \"C\",\n        CellularComponent: \"CC\",\n        BiologicalProcess: \"BP\",\n        MolecularActivity: \"MA\"\n    }\n\n    let dataArray = props.className.split('-').map(item => shorthand[item]);\n    \n    svg.selectAll(\"circle\")\n        .data(dataArray)\n        .enter().append(\"circle\")\n                    .attr(\"r\", \"10\")\n                    .attr(\"cx\", (d, i) => 80*i + 10)\n                    .attr(\"cy\", \"10\")\n                    .attr(\"fill\", (d) => color[d])\n    \n    \n    svg.selectAll(\"line\")\n        .data(dataArray.slice(0, dataArray.length -1))\n        .enter().append(\"line\")\n                    .attr(\"x1\", (d, i) => 80*i +25)\n                    .attr(\"y1\", \"10\")\n                    .attr(\"y2\", \"10\")\n                    .attr(\"width\", 10)\n                    .attr(\"x2\", (d, i) => 80*i + 75)\n                    .attr(\"stroke\", \"#ded9d3\")\n                    .attr(\"stroke-width\", \"1\")\n\n    svg.append(\"text\").selectAll(\"tspan\")\n        .data(dataArray)\n        .enter().append(\"tspan\")\n        .attr(\"x\", (d, i) => 80 * i + 10)\n        .attr(\"y\", 10)\n        .attr(\"stroke\", \"white\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"dominant-baseline\", \"middle\")\n        .attr(\"font-size\", \"10\")\n        .text((d) => d)\n\n  }\nexport default Viz\n","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\n\nconst Viz = () => {\n  useEffect(() => {\n   draw()\n }, [2])\n  return <div className='node-label' />\n}\n\nconst draw = () => {\n    let svg = d3.select('.node-label').append('svg')\n                .attr('height', \"150px\")\n                .attr('width', \"100%\")\n                .attr('id', 'svg-viz-node-label')\n\n    const color = {\n        G: '#02b3e4',\n        SV: \"#e91e63\", \n        CS: '#fa750f',\n        PF: '#1b03fc',\n        PW: '#607d8b',\n        T: '#7d4d3e',\n        A: '#4caf50',\n        GF: \"#e11F63\",\n        P: \"#f21e37\",\n        CL: '#175442',\n        BS: '#815499',\n        D: '#7761f2',\n        C: '#d8e339',\n        CC: '#3107d9',\n        BP: '#236b44',\n        MA: '#0366fc',\n    }\n\n    const shorthand = {\n        Gene: \"G\",\n        SequenceVariant: \"SV\",\n        ChemicalSubstance: \"CS\",\n        PhenotypicFeature: \"PF\",\n        Pathway: \"PW\",\n        Transcript: \"T\",\n        AnatomicalEntity: \"A\",\n        GeneFamily: \"GF\",\n        Protein: \"P\",\n        CellLine: \"CL\",\n        Biosample: \"BS\",\n        DiseaseOrPhenotypicFeature: \"D\",\n        Cell: \"C\",\n        CellularComponent: \"CC\",\n        BiologicalProcess: \"BP\",\n        MolecularActivity: \"MA\"\n    }\n\n    const fullName = _.invert(shorthand);\n\n    const dataArray = Object.keys(color);\n\n    svg.selectAll(\"circle\")\n        .data(dataArray)\n        .enter().append(\"circle\")\n                    .attr(\"r\", \"10\")\n                    .attr(\"cx\", (d, i) => (i%4)*160 + 10)\n                    .attr(\"cy\", (d, i) => Math.floor(i/4) * 30 + 10)\n                    .attr(\"fill\", (d) => color[d])\n\n    function drawOneLabel(label, index) {\n\n\n        svg.append(\"text\")\n            .attr(\"x\", (index%4)*160 + 10)\n            .attr(\"y\", Math.floor(index/4) * 30 + 10)\n            .attr(\"stroke\", \"white\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"dominant-baseline\", \"middle\")\n            .attr(\"font-size\", \"10\")\n            .text(label)\n        \n        svg.append(\"text\")\n            .attr(\"x\", (index%4)*160 + 40)\n            .attr(\"y\", Math.floor(index/4) * 30 + 10)\n            .attr(\"stroke\", \"black\")\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"dominant-baseline\", \"middle\")\n            .attr(\"font-size\", \"10\")\n            .text(fullName[label])\n    }\n\n    for (let i = 0; i < dataArray.length; i++) {\n        drawOneLabel(dataArray[i], i)\n    }\n\n\n  }\nexport default Viz\n","import { Button, Form, Segment, Checkbox, Table } from 'semantic-ui-react'\nimport React, { Component } from 'react';\nimport Viz from './Viz.js';\nimport LabelViz from './VizLabel';\n\n\nclass MetaPathForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedPath: ''\n        }\n    }\n\n\n\n    render() {\n        const radios1 = this.props.paths.map((path) => {\n            return (\n                <Form.Field key={path} label={path} name={path} value={path} control='input' type='checkbox' onChange={this.props.handleSelect}></Form.Field>\n            );\n          });\n        \n          const radios2 = this.props.paths.map((path) => {\n            return (\n                <li>\n                    <Checkbox><label><Viz className={path} /></label></Checkbox>\n                    \n                </li>\n            );\n          });\n        const radios = this.props.paths.map((path) => {\n            return (\n                <Table.Row textAlign='right'>\n                    <Table.Cell>\n                        <label>\n                            <input type=\"checkbox\"\n                                name={path}\n                                onChange={this.props.handleSelect} \n                                defaultChecked={false} /> \n                        </label>\n                    </Table.Cell>\n                    <Table.Cell><Viz className={path} /></Table.Cell>\n                </Table.Row>\n            )\n        })\n\n        return (\n            <div className={this.props.shouldHide ? '' : 'hidden'}>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <Segment color='red'>\n                            <h2> Step 2: Select the MetaPath you want to execute.</h2>\n                            <hr />\n                            <Table singleLine>\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.HeaderCell width={1}></Table.HeaderCell>\n                                        <Table.HeaderCell>MetaPath</Table.HeaderCell>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>\n                                    {radios}\n                                </Table.Body>\n                            </Table>\n                            <p>Color Schema</p>\n                            <LabelViz />\n                            <div className=\"col text-center\">\n                                <Button type='submit' onClick={this.props.handleBackToStep1}>Back</Button>\n                                <Button type='submit' onClick={this.props.handleSubmit}>Continue</Button>\n                            </div>\n                        </Segment>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default MetaPathForm\n","import React from 'react';\nimport { Table } from 'reactstrap';\n\nfunction RenderTable({semantic_type, fields, content}) {\n    return (\n        <React.Fragment>\n            <h3>{semantic_type}</h3>\n            <Table responsive className=\"table table-striped table-bordered table-hover\">\n                \n                <thead class=\"thead-dark\">\n                    <tr>\n                        {fields.map((field, index) => (\n                            <th key={semantic_type + field + index}>{field}</th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {content.map((record, index) => (\n                        <tr key={semantic_type + record + index}>\n                            {record.map((item) => (\n                                <td key={semantic_type + item + index}> {item} </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n        </React.Fragment>\n    )\n}\n\nexport default RenderTable;","import React, { Component } from \"react\";\nimport { Graph } from \"react-d3-graph\";\nimport RenderTable from \"./TableComponent\";\n \n\nexport default class D3Graph extends Component {\n\n  render() {\n    // graph payload (with minimalist structure)\n\n    // the graph configuration, you only need to pass down properties\n    // that you want to override, otherwise default ones will be used\n    const myConfig = {\n      nodeHighlightBehavior: true,\n      node: {\n          color: \"lightgreen\",\n          size: 80,\n          highlightStrokeColor: \"blue\",\n      },\n      link: {\n          color: \"#d3d3d3\",\n          fontColor: \"black\",\n          highlightColor: \"lightblue\",\n          labelProperty: \"label\",\n          fontSize: 8,\n          opacity: 1,\n          renderLabel: true,\n      },\n      width: 1000,\n      height: 500\n  };\n\n  const renderGraph = () => (\n    <div>\n        <h3>Graph</h3>\n        <Graph\n          id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n          data={this.props.graph}\n          config={myConfig}\n        />\n    </div>\n  )\n  return (\n    this.props.resultReady ? renderGraph(): null\n  )}   \n}\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Table, Form, Pagination } from 'semantic-ui-react'\n\nexport default class BTETable extends Component {\n  state = {\n    column: null,\n    data: [],\n    display: [],\n    direction: null,\n    activePage: 1,\n    totalPages: 1\n  };\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.content !== prevProps.content) {\n      this.setState({data: this.props.content})\n      if (Array.isArray(this.props.content)){\n        this.setState({display: this.props.content.slice(0, 10),\n                       totalPages: Math.floor(this.props.content.length/10) + 1})\n      }\n    }\n  }\n\n  handleSort = (clickedColumn) => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending',\n      });\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending',\n      display: this.state.data.slice(this.state.activePage*10 - 10, this.state.activePage*10),\n    });\n  }\n\n  handlePaginationChange = (e, { activePage }) => {\n    this.setState({display: this.state.data.slice(activePage*10 - 10, activePage*10),\n                   activePage: activePage});\n  }\n\n\n  render() {\n    const { column, data, direction } = this.state\n\n    const formData = () => (\n      <Form>\n            <h2> Step 3: Select the Query Result you want to display.</h2>\n            <hr />\n            <h3>Your Query Results</h3>\n            <Table sortable celled fixed>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell />\n                  <Table.HeaderCell\n                    sorted={column === 'source_node' ? direction : null}\n                    onClick={this.handleSort('source_node')}\n                  >\n                    sourceNode\n                  </Table.HeaderCell>\n                  <Table.HeaderCell\n                    sorted={column === 'pred1' ? direction : null}\n                    onClick={this.handleSort('pred1')}\n                  >\n                    pred1\n                  </Table.HeaderCell>\n                  <Table.HeaderCell\n                    sorted={column === 'intermediate_node' ? direction : null}\n                    onClick={this.handleSort('intermediate_node')}\n                  >\n                    intermediateNode\n                  </Table.HeaderCell>\n                  <Table.HeaderCell\n                    sorted={column === 'pred2' ? direction : null}\n                    onClick={this.handleSort('pred2')}\n                  >\n                    pred2\n                  </Table.HeaderCell>\n                  <Table.HeaderCell\n                    sorted={column === 'target_node' ? direction : null}\n                    onClick={this.handleSort('target_node')}\n                  >\n                    targetNode\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {_.map(this.state.display, (item) => (\n                <Table.Row key={Object.values(item).join('||')}>\n                  <Table.Cell collapsing>\n                      <label>\n                      <input type=\"checkbox\"\n                        name={Object.values(item).join('||')}\n                        onChange={this.props.handleSelect} \n                        defaultChecked={false} /> \n                      display\n                    </label>\n                  </Table.Cell>\n                  <Table.Cell>{item['input']}</Table.Cell>\n                  <Table.Cell>{item['pred1']}</Table.Cell>\n                  <Table.Cell>{item['node1_name']}</Table.Cell>\n                  <Table.Cell>{item['pred2']}</Table.Cell>\n                  <Table.Cell>{item['output_name']}</Table.Cell>\n                </Table.Row>\n              ))}\n              </Table.Body>\n            </Table>\n            <Pagination\n              onPageChange={this.handlePaginationChange}\n              defaultActivePage={1}\n              totalPages={this.state.totalPages}\n              siblingRange={1}\n              // Heads up! All items are powered by shorthands, if you want to hide one of them, just pass `null` as value\n            />\n          </Form>\n    )\n\n    return (\n      this.props.resultReady ? formData(): null\n    )\n  }\n}\n","import React from 'react'\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\n\nconst ReactLoader = () => (\n  <Segment>\n    <Dimmer active inverted>\n      <Loader />\n    </Dimmer>\n    <h2>The result might take a couple minutes to show up. </h2>\n    <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\n    <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\n  </Segment>\n)\n\nexport default ReactLoader","import D3Graph from './D3GraphComponent';\nimport BTETable from './BTETableComponent';\nimport ReactLoader from './DimerComponent';\nimport React, { Component } from 'react';\nimport { Segment, Divider, Dimmer, Loader, Image } from 'semantic-ui-react';\n\n\nexport default class ExplainQueryResult extends Component {\n    render() {\n        return (\n            <div className={this.props.shouldHide ? '' : 'hidden'}>\n                <div className=\"col-12\">\n                    <Segment color='blue'>\n                        {this.props.resultReady ? null: <ReactLoader />}\n                        <BTETable\n                            resultReady={this.props.resultReady}\n                            content={this.props.content}\n                            handleSelect={this.props.handleSelect}\n                        />\n                        <Divider />\n                        <div className={this.props.shouldHide ? '' : 'hidden'}>\n                            <D3Graph\n                                graph={this.props.graph}\n                                resultReady={this.props.resultReady}\n                            />\n                        </div>\n                    </Segment>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport { Breadcrumb } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport AccordionComponent from './AccordionComponent';\nimport Steps from './StepsComponent';\nimport ExplainInput from './ExplainInputComponent';\nimport MetaPathForm from './MetaPathFormComponent';\nimport ExplainQueryResult from './ExplainQueryResultComponent';\nlet _ = require('lodash');\n\nclass Explain extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            step1Active: true,\n            step2Active: false,\n            step3Active: false,\n            step1Complete: false,\n            step2Complete: false,\n            step3Complete: false,\n            resultReady: false,\n            selectedInput: {},\n            selectedOutput: {},\n            paths: [],\n            selectedPaths: new Set(),\n            queryResults: {},\n            selectedQueryResults: new Set(),\n            graph: {nodes: [{id: 'kevin'}], links: []},\n            showInput: true,\n            showMetaPath: false,\n            showResult: false,\n            showModal: false,\n        };\n        this.handleStep1Submit = this.handleStep1Submit.bind(this);\n        this.handleStep2Submit = this.handleStep2Submit.bind(this);\n        this.handleInputSelect = this.handleInputSelect.bind(this);\n        this.handleOutputSelect = this.handleOutputSelect.bind(this);\n        this.handleMetaPathSelect = this.handleMetaPathSelect.bind(this);\n        this.handleQueryResultSelect = this.handleQueryResultSelect.bind(this);\n        this.handleBackToStep1 = this.handleBackToStep1.bind(this);\n        this.handleBackToStep2 = this.handleBackToStep2.bind(this);\n        this.handleBackToStep3 = this.handleBackToStep3.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    };\n\n    //this function will be passed to autocomplete component\n    //in order to retrieve the selected input\n    handleInputSelect(value) {    \n        this.setState({\n          selectedInput: value\n        });\n    }\n\n    //this function will be passed to autocomplete component\n    //in order to retrieve the selected output\n    handleOutputSelect(value) {    \n        this.setState({\n          selectedOutput: value\n        });\n    }\n\n    handleMetaPathSelect(event){\n        const selectedPaths = this.state.selectedPaths;\n        if (event.target.checked) {\n            selectedPaths.add(event.target.name)\n        } else {\n            selectedPaths.delete(event.target.name)\n        }\n        this.setState({ selectedPaths: selectedPaths })\n    }\n\n    handleQueryResultSelect(event){\n        const selectedQueryResults = this.state.selectedQueryResults;\n        if (event.target.checked) {\n            selectedQueryResults.add(event.target.name)\n        } else {\n            selectedQueryResults.delete(event.target.name)\n        }\n        const graph = this.recordsToGraph(selectedQueryResults)\n        this.setState({ selectedQueryResults: selectedQueryResults,\n                        graph: graph })\n    }\n\n    handleClose = () => this.setState({\n        showModal: false\n    })\n\n\n    handleStep1Submit(event) {\n        event.preventDefault();\n        if (_.isEmpty(this.state.selectedInput) || _.isEmpty(this.state.selectedOutput)){\n            this.setState({\n                showModal: true\n            });\n        } else {\n            this.setState({\n                step1Active: false,\n                step1Complete: true,\n                step2Active: true,\n                step3Active: false,\n                step2Complete: false,\n                step3Complete: false,\n                selectedPaths: new Set(),\n                queryResults: {},\n                selectedQueryResults: new Set(),\n                graph: {nodes: [{id: 'kevin'}], links: []},\n                showInput: false,\n                showMetaPath: true,\n                showResult: false\n            });\n            fetch('https://geneanalysis.ncats.io/explorer_api/v1/find_metapath?input_cls=' + this.state.selectedInput.type + '&output_cls=' + this.state.selectedOutput.type)\n                .then(response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    else {\n                        var error = new Error('Error ' + response.status + ': ' + response.statsText);\n                        error.response = response;\n                        throw error;\n                    }\n                },\n                error => {\n                    var errmess = new Error(error.message);\n                    throw errmess;\n                })\n                .then(response => response.json())\n                .then(response => {\n                    this.setState({\n                        paths: response['edges']\n                    });\n                })\n                .catch(error => { console.log('MetaPath could not be found', error.message); alert('Sorry! Metapath could not be found.\\nError: '+error.message); });\n        }\n        \n    }\n\n    handleBackToStep1(event) {\n        event.preventDefault();\n        this.setState({\n            step1Active: true,\n            step2Active: false,\n            step3Active: false,\n            showInput: true,\n            showMetaPath: false,\n            showResult: false\n        }) \n    }\n\n    handleStep2Submit(event) {\n        event.preventDefault();\n        this.setState({\n            step2Active: false,\n            step2Complete: true,\n            step3Active: true,\n            showMetaPath: false,\n            showResult: true,\n            resultReady: false\n        })\n        let url = new URL('https:/geneanalysis.ncats.io/explorer_api/v1/connect')\n\n        var params = {input_obj: JSON.stringify(this.state.selectedInput),\n                      output_obj: JSON.stringify(this.state.selectedOutput),\n                      intermediate_nodes: JSON.stringify(['Gene'])} \n        url.search = new URLSearchParams(params).toString();\n\n        fetch(url\n        )\n            .then(response => {\n                if (response.ok) {\n                    return response;\n                }\n                else {\n                    var error = new Error('Error ' + response.status + ': ' + response.statsText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n            .then(response => response.json())\n            .then(response => {\n                this.setState({\n                    queryResults: response['data'],\n                    resultReady: true,\n                    step3Complete: true\n                });\n            })\n            .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n    }\n\n    handleBackToStep2(event) {\n        event.preventDefault();\n        this.setState({\n            step1Active: false,\n            step2Active: true,\n            step3Active: false,\n            showInput: false,\n            showMetaPath: true,\n            showResult: false\n        }) \n    }\n\n    handleBackToStep3(event) {\n        event.preventDefault();\n        this.setState({\n            step1Active: false,\n            step2Active: false,\n            step3Active: true,\n            showInput: false,\n            showMetaPath: false,\n            showResult: true\n        }) \n    }\n\n    recordsToGraph(records) {\n        records = Array.from(records);\n        let graph = {nodes: [{id: 'kevin'}], links: []};\n        if (Array.isArray(records) && records.length) {\n          graph['nodes'] = [{id: records[0].split('||')[0], color: 'green'},\n                            {id: records[0].split('||')[14], color: 'blue'}]\n        };\n        for (let i = 0; i < records.length; i++) {\n          let rec = records[i].split('||')\n          graph['links'].push({'source': rec[0],\n                               'target': rec[7],\n                               'label': rec[2]})\n          graph['links'].push({'source': rec[7],\n                               'target': rec[14],\n                               'label': rec[9]})\n          graph['nodes'].push({id: rec[7], color: 'red'})\n        }\n        return graph\n      }\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <Breadcrumb>\n                        <Breadcrumb.Section><Link to='/'>Home</Link></Breadcrumb.Section>\n                        <Breadcrumb.Divider />\n                        <Breadcrumb.Section active>Explain</Breadcrumb.Section>\n                        </Breadcrumb>\n                    </div>\n                    <div className=\"col-12\">\n                        <AccordionComponent />\n                        \n                        <hr />\n                    </div>\n                </div>\n                \n                <Steps\n                    step1Active={this.state.step1Active}\n                    step2Active={this.state.step2Active}\n                    step3Active={this.state.step3Active}\n                    step1Complete={this.state.step1Complete}\n                    step2Complete={this.state.step2Complete}\n                    step3Complete={this.state.step3Complete}\n                    handleBackToStep1={this.handleBackToStep1}\n                    handleBackToStep2={this.handleBackToStep2}\n                    handleBackToStep3={this.handleBackToStep3}\n                />\n                <ExplainInput\n                    shouldHide={this.state.showInput}\n                    showModal={this.state.showModal}\n                    handleClose={this.handleClose}\n                    handleStep1Submit={this.handleStep1Submit}\n                    handleInputSelect={this.handleInputSelect}\n                    handleOutputSelect={this.handleOutputSelect}\n                />\n                <MetaPathForm\n                    shouldHide={this.state.showMetaPath}\n                    paths={this.state.paths}\n                    handleSelect={this.handleMetaPathSelect}\n                    handleSubmit={this.handleStep2Submit}\n                    handleBackToStep1={this.handleBackToStep1}\n                />\n                <ExplainQueryResult\n                    shouldHide={this.state.showResult}\n                    resultReady={this.state.resultReady}\n                    content={this.state.queryResults}\n                    handleSelect={this.handleQueryResultSelect}\n                    graph={this.state.graph}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Explain;\n\n\n","import React, { Component } from 'react'\nimport { Accordion, Icon, List } from 'semantic-ui-react'\n\nexport default class AccordionComponent extends Component {\n  state = { activeIndex: 10 }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    const { activeIndex } = this.state\n\n    return (\n      <div>\n        <br></br>\n        <Icon circular name='info' />\n        <Accordion>\n          <Accordion.Title\n            active={activeIndex === 0}\n            index={0}\n            onClick={this.handleClick}\n          >\n            <Icon name='dropdown' />\n            What can <b>\"PREDICT\"</b> queries do?\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 0}>\n            <p>\n            PREDICT queries are designed to predict plausible relationships between one entity and an entity class.\n            </p>\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 1}\n            index={1}\n            onClick={this.handleClick}\n          >\n            <Icon name='dropdown' />\n            Give me some examples of <b>\"PREDICT\"</b> queries.\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 1}>\n            <List bulleted>\n              <List.Item>What <b>drugs</b> might be used to treat <b>hyperphenylalaninemia</b>?\"</List.Item>\n              <List.Item>What <b>genes</b> are in the same pathway as <b>CDK7</b>?</List.Item>\n            </List>\n          </Accordion.Content>\n        </Accordion>\n      </div>\n    )\n  }\n}","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Search } from 'semantic-ui-react'\n\nconst initialState = { isLoading: false, results: [], value: '', data: [] }\n\nexport default class SearchSemanticTypeComponent extends Component {\n  state = initialState\n  \n  componentDidMount() {\n    fetch('https://geneanalysis.ncats.io/explorer_api/v1/semantictypes')\n            .then(response => {\n                if (response.ok) {\n                    return response;\n                }\n                else {\n                    var error = new Error('Error ' + response.status + ': ' + response.statsText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n            .then(response => response.json())\n            .then(response => {\n                console.log('response', response)\n                this.setState({\n                    data: response,\n                });\n            })\n            .catch(error => { console.log('semantic types could not be fetched', error.message); alert('Semantic Types could not be fetched: '+error.message); });\n    }\n  handleResultSelect = (e, { result }) => {\n      this.setState({ value: result.title });\n      this.props.handleSelect(result.title);\n  }\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n    setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState)\n\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n        const isMatch = (result) => re.test(result)\n\n        this.setState({\n        isLoading: false,\n        results: _.filter(this.state.data, isMatch).map(item => ({'title': item})),\n        })\n    }, 300)\n  }\n\n  render() {\n    const { data, isLoading, value, results } = this.state\n\n    return (\n          <Search\n            loading={isLoading}\n            onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n              leading: true,\n            })}\n            results={results}\n            value={value}\n            {...this.props}\n          />\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport AutoComplete from './AutoCompleteComponent';\nimport SearchSemanticTypeComponent from './SemanticTypesAutocompleteComponent';\nimport { Form, Button, Segment, Popup } from 'semantic-ui-react'\n\nexport default class PredictInput extends Component {\n  state = {\n      sourceValue: '',\n      sourceSelected: {},\n      targetValue: '',\n      targetSelected: {}\n  }\n\n  render() {\n    return (\n        <div className={this.props.shouldHide ? '' : 'hidden'}>\n            <div className=\"row \">\n                <div className=\"col-12\">\n                    <Segment color=\"green\">\n                        <Form onSubmit={this.props.handleStep1Submit}>\n                            <Form.Group>\n                                <h2> Step 1: Specify source and target nodes.</h2>\n                                <hr />\n                            </Form.Group>\n                            <div>\n                                <Popup content=\"The starting node of the paths\" trigger={<h3>Source Node</h3>}/>\n                            </div>\n                            <br />\n                            <Form.Group>\n                                <AutoComplete \n                                    handleselect={this.props.handleInputSelect}\n                                />\n                            </Form.Group>\n                            <div>\n                                <Popup content=\"The ending node of the paths\" trigger={<h3>Target Node</h3>}/>\n                            </div>\n                            <br />\n                            <Form.Group>\n                                <SearchSemanticTypeComponent \n                                    handleSelect={this.props.handleOutputSelect}\n                                />\n                            </Form.Group>\n                            <div className=\"col text-center\">\n                                <Button type='submit' onClick={this.props.handleStep1Submit}>Continue</Button>\n                            </div>\n                        </Form>\n                    </Segment>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\n\n","import React, {Component} from 'react';\nimport Tree from 'react-tree-graph';\nimport 'react-tree-graph/dist/style.css'\n\nexport default class TreeGraph extends Component {\n    render() {\n        const renderGraph = () => (\n            <div>\n                <h3>Graph</h3>\n                <Tree\n                    data={this.props.graph}\n                    height={700}\n                    width={1000}/>\n                </div>\n          )\n        return (\n            this.props.resultReady ? renderGraph(): null\n        ) \n    }\n}\n\n","import D3Graph from './D3GraphComponent';\nimport BTETable from './BTETableComponent';\nimport ReactLoader from './DimerComponent';\nimport React, { Component } from 'react';\nimport { Segment, Divider, Dimmer, Loader, Image } from 'semantic-ui-react';\nimport TreeGraph from './TreeGraphComponent';\n\nexport default class PredictQueryResult extends Component {\n    render() {\n        return (\n            <div className={this.props.shouldHide ? '' : 'hidden'}>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <Segment color='blue'>\n                            {this.props.resultReady ? null: <ReactLoader />}\n                            <BTETable\n                                resultReady={this.props.resultReady}\n                                content={this.props.content}\n                                handleSelect={this.props.handleSelect}\n                            />\n                            <Divider />\n                            <div className={this.props.shouldHide ? '' : 'hidden'}>\n                                <TreeGraph\n                                    graph={this.props.graph}\n                                    resultReady={this.props.resultReady}\n                                />\n                            </div>\n                        </Segment>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport { Breadcrumb } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport AccordionComponent from './PredictHelpComponent';\nimport Steps from './StepsComponent';\nimport PredictInput from './PredictInputComponent';\nimport MetaPathForm from './MetaPathFormComponent';\nimport PredictQueryResult from './PredictQueryResultComponent';\n\nclass Predict extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            step1Active: true,\n            step2Active: false,\n            step3Active: false,\n            step1Complete: false,\n            step2Complete: false,\n            step3Complete: false,\n            resultReady: false,\n            selectedInput: {},\n            selectedOutput: {},\n            paths: [],\n            selectedPaths: new Set(),\n            queryResults: {},\n            selectedQueryResults: new Set(),\n            graph: {nodes: [{id: 'kevin'}], links: []},\n            showInput: true,\n            showMetaPath: false,\n            showResult: false,\n        };\n        this.handleStep1Submit = this.handleStep1Submit.bind(this);\n        this.handleStep2Submit = this.handleStep2Submit.bind(this);\n        this.handleInputSelect = this.handleInputSelect.bind(this);\n        this.handleOutputSelect = this.handleOutputSelect.bind(this);\n        this.handleMetaPathSelect = this.handleMetaPathSelect.bind(this);\n        this.handleQueryResultSelect = this.handleQueryResultSelect.bind(this);\n        this.handleBackToStep1 = this.handleBackToStep1.bind(this);\n        this.handleBackToStep2 = this.handleBackToStep2.bind(this);\n        this.handleBackToStep3 = this.handleBackToStep3.bind(this);\n    };\n\n    //this function will be passed to autocomplete component\n    //in order to retrieve the selected input\n    handleInputSelect(value) {    \n        this.setState({\n          selectedInput: value\n        });\n    }\n\n    //this function will be passed to autocomplete component\n    //in order to retrieve the selected output\n    handleOutputSelect(value) {    \n        this.setState({\n          selectedOutput: value\n        });\n    }\n\n    handleMetaPathSelect(event){\n        const selectedPaths = this.state.selectedPaths;\n        console.log('meta path select', event)\n        if (event.target.checked) {\n            selectedPaths.add(event.target.name)\n        } else {\n            selectedPaths.delete(event.target.name)\n        }\n        this.setState({ selectedPaths: selectedPaths })\n    }\n\n    handleQueryResultSelect(event){\n        const selectedQueryResults = this.state.selectedQueryResults;\n        if (event.target.checked) {\n            selectedQueryResults.add(event.target.name)\n        } else {\n            selectedQueryResults.delete(event.target.name)\n        }\n        const graph = this.recordsToTreeGraph(selectedQueryResults)\n        this.setState({ selectedQueryResults: selectedQueryResults,\n                        graph: graph })\n    }\n\n\n    handleStep1Submit(event) {\n        event.preventDefault();\n        this.setState({\n            step1Active: false,\n            step1Complete: true,\n            step2Active: true,\n            step3Active: false,\n            step2Complete: false,\n            step3Complete: false,\n            selectedPaths: new Set(),\n            queryResults: {},\n            selectedQueryResults: new Set(),\n            graph: {nodes: [{id: 'kevin'}], links: []},\n            showInput: false,\n            showMetaPath: true,\n            showResult: false\n        })\n        fetch('https://geneanalysis.ncats.io/explorer_api/v1/find_metapath?input_cls=' + this.state.selectedInput.type + '&output_cls=' + this.state.selectedOutput)\n            .then(response => {\n                if (response.ok) {\n                    return response;\n                }\n                else {\n                    var error = new Error('Error ' + response.status + ': ' + response.statsText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n            .then(response => response.json())\n            .then(response => {\n                this.setState({\n                    paths: response['edges']\n                });\n            })\n            .catch(error => { console.log('find metapath failed', error.message); alert('Find MetaPath Failed.\\nError: '+error.message); });\n    }\n\n    handleBackToStep1(event) {\n        event.preventDefault();\n        this.setState({\n            step1Active: true,\n            step2Active: false,\n            step3Active: false,\n            showInput: true,\n            showMetaPath: false,\n            showResult: false\n        }) \n    }\n\n    handleStep2Submit(event) {\n        event.preventDefault();\n        this.setState({\n            step2Active: false,\n            step2Complete: true,\n            step3Active: true,\n            showMetaPath: false,\n            showResult: true,\n            resultReady: false\n        })\n        let url = new URL('https://geneanalysis.ncats.io/explorer_api/v1/connect')\n\n        var params = {input_obj: JSON.stringify(this.state.selectedInput),\n                      output_obj: JSON.stringify(this.state.selectedOutput),\n                      intermediate_nodes: JSON.stringify(['Gene'])} \n        url.search = new URLSearchParams(params).toString();\n\n        fetch(url\n        )\n            .then(response => {\n                if (response.ok) {\n                    return response;\n                }\n                else {\n                    var error = new Error('Error ' + response.status + ': ' + response.statsText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n            .then(response => response.json())\n            .then(response => {\n                this.setState({\n                    queryResults: response['data'],\n                    resultReady: true,\n                    step3Complete: true\n                });\n            })\n            .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n    }\n\n    handleBackToStep2(event) {\n        event.preventDefault();\n        this.setState({\n            step1Active: false,\n            step2Active: true,\n            step3Active: false,\n            showInput: false,\n            showMetaPath: true,\n            showResult: false\n        }) \n    }\n\n    handleBackToStep3(event) {\n        event.preventDefault();\n        this.setState({\n            step1Active: false,\n            step2Active: false,\n            step3Active: true,\n            showInput: false,\n            showMetaPath: false,\n            showResult: true\n        }) \n    }\n\n    recordsToTreeGraph(records) {\n        records = Array.from(records);\n        let tree_dict = {};\n        let tree = {children: []}\n        if (Array.isArray(records) && records.length) {\n          tree['name'] = records[0].split('||')[0];\n        };\n        for (let i = 0; i < records.length; i++) {\n          let rec = records[i].split('||')\n          if (!(rec[7] in tree_dict)) {\n              tree_dict[rec[7]] = new Set([rec[14]]);\n          } else {\n              tree_dict[rec[7]].add(rec[14])\n          }\n        };\n        for (const prop in tree_dict) {\n            let rec = {name: prop, pathProps: prop, children: []};\n            rec['children'] = Array.from(tree_dict[prop]).map(item=>({name: item, children: []}));\n            tree['children'].push(rec);\n        }\n        return tree\n      }\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <Breadcrumb>\n                        <Breadcrumb.Section><Link to='/'>Home</Link></Breadcrumb.Section>\n                        <Breadcrumb.Divider />\n                        <Breadcrumb.Section active>Predict</Breadcrumb.Section>\n                        </Breadcrumb>\n                    </div>\n                    <div className=\"col-12\">\n                        <AccordionComponent />\n                        \n                        <hr />\n                    </div>\n                </div>\n                \n                <Steps\n                    step1Active={this.state.step1Active}\n                    step2Active={this.state.step2Active}\n                    step3Active={this.state.step3Active}\n                    step1Complete={this.state.step1Complete}\n                    step2Complete={this.state.step2Complete}\n                    step3Complete={this.state.step3Complete}\n                    handleBackToStep1={this.handleBackToStep1}\n                    handleBackToStep2={this.handleBackToStep2}\n                    handleBackToStep3={this.handleBackToStep3}\n                />\n                <PredictInput\n                    shouldHide={this.state.showInput}\n                    handleStep1Submit={this.handleStep1Submit}\n                    handleInputSelect={this.handleInputSelect}\n                    handleOutputSelect={this.handleOutputSelect}\n                />\n                <MetaPathForm\n                    shouldHide={this.state.showMetaPath}\n                    paths={this.state.paths}\n                    handleSelect={this.handleMetaPathSelect}\n                    handleSubmit={this.handleStep2Submit}\n                    handleBackToStep1={this.handleBackToStep1}\n                />\n                <PredictQueryResult\n                    shouldHide={this.state.showResult}\n                    resultReady={this.state.resultReady}\n                    content={this.state.queryResults}\n                    handleSelect={this.handleQueryResultSelect}\n                    graph={this.state.graph}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Predict;\n\n\n","export const baseUrl = 'http://localhost:3001/';\n","// define actions\n//\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n    console.log('posting comment');\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': \"application/json\"\n        },\n        credentials: 'same-origin'\n        })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statsText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n}\n\nexport const fetchDishes = () => (dispatch) =>{\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statsText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n};\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING \n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) =>{\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statsText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) =>{\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statsText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromos(promotions)))\n        .catch(error => dispatch(promosFailed(error.message)));\n};\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING \n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n","// This is the file to store all action types\n// The value of each action type is string\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\n\n","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport About from './AboutComponent';\nimport Explain from \"./ExplainComponent\";\nimport Predict from \"./PredictComponent\";\nimport { Route, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport _ from 'lodash';\n\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    leaders: state.leaders,\n    promotions: state.promotions\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  \n    postComment: (dishId, rating, author, comment) => {dispatch(postComment(dishId, rating, author, comment))},\n    fetchDishes: () => {dispatch(fetchDishes())},\n    fetchComments: () => {dispatch(fetchComments())},\n    fetchPromos: () => {dispatch(fetchPromos())},\n    resetFeedbackForm: () => {dispatch(actions.reset('feedback'))}\n  \n  });\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: []\n    }\n  }\n  //when the main component is mounted, fetch dishes will be called and load into redux store\n  componentDidMount() {\n\n  }\n\n  render() {\n\n    return (\n      <div>\n          <Header />\n          <Route exact path='/' component={Home}></Route>\n          <Route exact path='/about' component={About}></Route>\n          <Route exact path='/predict' component={Predict}></Route>\n          <Route exact path='/explain' component={Explain}></Route>\n          <Footer />\n      </div>\n    );\n  }\n  \n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n        isLoading: true,\n        errMess: null,\n        dishes: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false,\n                    errMess:null, dishes: action.payload}\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true,\n                    errMess:null, dishes: []}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false,\n                    errMess:action.payload, dishes: []}\n\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n    errMess: null,\n    comments: []\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)}\n\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, \n                    errMess:null, comments: action.payload}\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state,\n                    errMess:action.payload, comments: []}\n\n        default:\n          return state;\n      }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n        isLoading: true,\n        errMess: null,\n        promotions: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false,\n                    errMess:null, promotions: action.payload}\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true,\n                    errMess:null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false,\n                    errMess:action.payload, promotions: []}\n\n        default:\n            return state;\n    }\n}","export const LEADERS = [\n    {\n      id: 0,\n      name: 'Peter Pan',\n      image: '/assets/images/alberto.png',\n      designation: 'Chief Epicurious Officer',\n      abbr: 'CEO',\n      featured: false,\n      description: \"Our CEO, Peter, credits his hardworking East Asian immigrant parents who undertook the arduous journey to the shores of America with the intention of giving their children the best future. His mother's wizardy in the kitchen whipping up the tastiest dishes with whatever is available inexpensively at the supermarket, was his first inspiration to create the fusion cuisines for which The Frying Pan became well known. He brings his zeal for fusion cuisines to this restaurant, pioneering cross-cultural culinary connections.\"\n    },\n    {\n      id: 1,\n      name: 'Dhanasekaran Witherspoon',\n      image: '/assets/images/alberto.png',\n      designation: 'Chief Food Officer',\n      abbr: 'CFO',\n        featured: false,\n      description: 'Our CFO, Danny, as he is affectionately referred to by his colleagues, comes from a long established family tradition in farming and produce. His experiences growing up on a farm in the Australian outback gave him great appreciation for varieties of food sources. As he puts it in his own words, Everything that runs, wins, and everything that stays, pays!'\n    },\n    {\n      id: 2,\n      name: 'Agumbe Tang',\n      image: '/assets/images/alberto.png',\n      designation: 'Chief Taste Officer',\n      abbr: 'CTO',\n        featured: false,\n      description: 'Blessed with the most discerning gustatory sense, Agumbe, our CFO, personally ensures that every dish that we serve meets his exacting tastes. Our chefs dread the tongue lashing that ensues if their dish does not meet his exacting standards. He lives by his motto, You click only if you survive my lick.'\n    },\n    {\n      id: 3,\n      name: 'Alberto Somayya',\n      image: '/assets/images/alberto.png',\n      designation: 'Executive Chef',\n      abbr: 'EC',\n      featured: true,\n      description: 'Award winning three-star Michelin chef with wide International experience having worked closely with whos-who in the culinary world, he specializes in creating mouthwatering Indo-Italian fusion experiences. He says, Put together the cuisines from the two craziest cultures, and you get a winning hit! Amma Mia!'\n    }\n  ];\n","import { LEADERS } from '../shared/leaders';\n\nexport const Leaders = (state = LEADERS, action) => {\n    switch(action.type) {\n        default:\n            return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Dishes } from './dishes';\nimport { createForms } from 'react-redux-form';\nimport { InitialFeedback } from './forms';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\n// enhancer is the second parameter for createStore\n// applyMiddleware is an enhancer\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n        <Provider store={store}>\n          <BrowserRouter basename='/explorer'>\n            <div>\n              <Main />\n            </div>\n          </BrowserRouter>\n        </Provider>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}